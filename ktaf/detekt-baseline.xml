<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ComplexCondition:Matrix.kt$Matrix$x &lt; 0 || x &gt;= width || y &lt; 0 || y &gt;= height || z &lt; 0 || z &gt;= depth</ID>
    <ID>CyclomaticComplexMethod:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$private fun drawCurrentFloorRoom( room: Room, left: Int, top: Int, isCurrent: Boolean, ansiGridStringBuilder: AnsiGridStringBuilder )</ID>
    <ID>CyclomaticComplexMethod:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$public fun build( ansiGridStringBuilder: AnsiGridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>CyclomaticComplexMethod:Game.kt$Game$internal fun execute()</ID>
    <ID>CyclomaticComplexMethod:GridRegionMapBuilder.kt$GridRegionMapBuilder$private fun drawCurrentFloorRoom( room: Room, left: Int, top: Int, isCurrent: Boolean, gridStringBuilder: GridStringBuilder )</ID>
    <ID>CyclomaticComplexMethod:GridRegionMapBuilder.kt$GridRegionMapBuilder$public fun build( gridStringBuilder: GridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>CyclomaticComplexMethod:ItemCommandInterpreter.kt$ItemCommandInterpreter$@Suppress("ReturnCount") private fun tryParseExamine(text: String, game: Game): Command?</ID>
    <ID>LongMethod:AnsiConversationFrameBuilder.kt$AnsiConversationFrameBuilder$override fun build(title: String, converser: Converser, commands: List&lt;CommandHelp&gt;): Frame</ID>
    <ID>LongMethod:AnsiHelpFrameBuilder.kt$AnsiHelpFrameBuilder$override fun build(title: String, description: String, commands: List&lt;CommandHelp&gt;): Frame</ID>
    <ID>LongMethod:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$private fun drawCurrentFloorRoom( room: Room, left: Int, top: Int, isCurrent: Boolean, ansiGridStringBuilder: AnsiGridStringBuilder )</ID>
    <ID>LongMethod:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$public fun build( ansiGridStringBuilder: AnsiGridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>LongMethod:AnsiSceneFrameBuilder.kt$AnsiSceneFrameBuilder$override fun build( room: Room, viewPoint: ViewPoint, playableCharacter: PlayableCharacter, message: String, contextualCommands: List&lt;CommandHelp&gt;, keyType: KeyType ): Frame</ID>
    <ID>LongMethod:Game.kt$Game$internal fun execute()</ID>
    <ID>LongMethod:GridRegionMapBuilder.kt$GridRegionMapBuilder$private fun drawCurrentFloorRoom( room: Room, left: Int, top: Int, isCurrent: Boolean, gridStringBuilder: GridStringBuilder )</ID>
    <ID>LongMethod:GridRegionMapBuilder.kt$GridRegionMapBuilder$public fun build( gridStringBuilder: GridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>LongMethod:TestGame.kt$TestGame$override fun instantiate(ioConfiguration: IOConfiguration): Game</ID>
    <ID>LongParameterList:AnsiAboutFrameBuilder.kt$AnsiAboutFrameBuilder$( private val ansiGridStringBuilder: AnsiGridStringBuilder, private val frameSize: Size, private val backgroundColor: AnsiColor = AnsiColor.RESET, private val borderColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val titleColor: AnsiColor = AnsiColor.WHITE, private val nameColor: AnsiColor = AnsiColor.GREEN, private val descriptionColor: AnsiColor = AnsiColor.WHITE, private val authorColor: AnsiColor = AnsiColor.BRIGHT_BLACK )</ID>
    <ID>LongParameterList:AnsiConversationFrameBuilder.kt$AnsiConversationFrameBuilder$( private val ansiGridStringBuilder: AnsiGridStringBuilder, private val frameSize: Size, private val backgroundColor: AnsiColor = AnsiColor.RESET, private val borderColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val titleColor: AnsiColor = AnsiColor.GREEN, private val nonPlayerMessageColor: AnsiColor = AnsiColor.YELLOW, private val playerMessageColor: AnsiColor = AnsiColor.BLUE, private val responseColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val inputColor: AnsiColor = AnsiColor.WHITE )</ID>
    <ID>LongParameterList:AnsiHelpFrameBuilder.kt$AnsiHelpFrameBuilder$( private val ansiGridStringBuilder: AnsiGridStringBuilder, private val frameSize: Size, private val backgroundColor: AnsiColor = AnsiColor.RESET, private val borderColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val titleColor: AnsiColor = AnsiColor.WHITE, private val descriptionColor: AnsiColor = AnsiColor.WHITE, private val commandColor: AnsiColor = AnsiColor.GREEN, private val commandDescriptionColor: AnsiColor = AnsiColor.YELLOW )</ID>
    <ID>LongParameterList:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$( ansiGridStringBuilder: AnsiGridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>LongParameterList:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$( gridStartX: Int, gridStartY: Int, gridAvailableWidth: Int, gridAvailableHeight: Int, matrix: Matrix, roomX: Int, roomY: Int, playerX: Int, playerY: Int )</ID>
    <ID>LongParameterList:AnsiRegionMapBuilder.kt$AnsiRegionMapBuilder$( private val lockedExit: Char = 'x', private val unlockedExit: Char = ' ', private val emptySpace: Char = ' ', private val verticalBoundary: Char = '|', private val horizontalBoundary: Char = '-', private val lowerLevel: Char = '.', private val player: Char = 'O', private val currentFloorIndicator: Char = '*', private val visitedBoundaryColor: AnsiColor = AnsiColor.WHITE, private val unvisitedBoundaryColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val playerColor: AnsiColor = AnsiColor.BLUE, private val lockedExitColor: AnsiColor = AnsiColor.RED, private val lowerFloorColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val showLowerFloors: Boolean = true )</ID>
    <ID>LongParameterList:AnsiRoomMapBuilder.kt$AnsiRoomMapBuilder$( ansiGridStringBuilder: AnsiGridStringBuilder, room: Room, viewPoint: ViewPoint, keyType: KeyType, startX: Int, startY: Int )</ID>
    <ID>LongParameterList:AnsiRoomMapBuilder.kt$AnsiRoomMapBuilder$( private val lockedExit: Char = 'x', private val itemOrCharacterInRoom: Char = '?', private val verticalBoundary: Char = '|', private val horizontalBoundary: Char = '-', private val verticalExitBorder: Char = '|', private val horizontalExitBorder: Char = '-', private val corner: Char = '+', private val keyPadding: Int = 6, private val boundaryColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val itemOrCharacterColor: AnsiColor = AnsiColor.BLUE, private val lockedExitColor: AnsiColor = AnsiColor.RED, private val visitedExitColor: AnsiColor = AnsiColor.YELLOW, private val unvisitedExitColor: AnsiColor = AnsiColor.GREEN )</ID>
    <ID>LongParameterList:AnsiRoomMapBuilder.kt$AnsiRoomMapBuilder$( room: Room, viewPoint: ViewPoint, keyType: KeyType, ansiGridStringBuilder: AnsiGridStringBuilder, startX: Int, startY: Int )</ID>
    <ID>LongParameterList:AnsiSceneFrameBuilder.kt$AnsiSceneFrameBuilder$( private val ansiGridStringBuilder: AnsiGridStringBuilder, private val roomMapBuilder: AnsiRoomMapBuilder, private val frameSize: Size, private val backgroundColor: AnsiColor = AnsiColor.RESET, private val borderColor: AnsiColor = AnsiColor.BRIGHT_BLACK, private val textColor: AnsiColor = AnsiColor.WHITE, private val inputColor: AnsiColor = AnsiColor.WHITE, private val commandsColor: AnsiColor = AnsiColor.WHITE, private val displayMessagesInIsolation: Boolean = true, private val suppressMovementMessages: Boolean = true )</ID>
    <ID>LongParameterList:Game.kt$Game$( public val information: GameInformation, public val player: PlayableCharacter, public val overworld: Overworld, private val completionCondition: EndCheck, private val gameOverCondition: EndCheck, private val errorPrefix: String = DEFAULT_ERROR_PREFIX, private val interpreter: Interpreter = defaultInterpreters, private val ioConfiguration: IOConfiguration = AnsiConsoleConfiguration, )</ID>
    <ID>LongParameterList:GridRegionMapBuilder.kt$GridRegionMapBuilder$( gridStartX: Int, gridStartY: Int, gridAvailableWidth: Int, gridAvailableHeight: Int, matrix: Matrix, roomX: Int, roomY: Int, playerX: Int, playerY: Int )</ID>
    <ID>LongParameterList:GridRegionMapBuilder.kt$GridRegionMapBuilder$( gridStringBuilder: GridStringBuilder, region: Region, x: Int, y: Int, maxWidth: Int, maxHeight: Int )</ID>
    <ID>LongParameterList:GridRegionMapBuilder.kt$GridRegionMapBuilder$( private val lockedExit: Char = 'x', private val unlockedExit: Char = ' ', private val emptySpace: Char = ' ', private val verticalBoundary: Char = '|', private val horizontalBoundary: Char = '-', private val lowerLevel: Char = '.', private val player: Char = 'O', private val currentFloorIndicator: Char = '*', private val showLowerFloors: Boolean = true )</ID>
    <ID>LongParameterList:GridRoomMapBuilder.kt$GridRoomMapBuilder$( gridStringBuilder: GridStringBuilder, room: Room, viewPoint: ViewPoint, keyType: KeyType, startX: Int, startY: Int )</ID>
    <ID>LongParameterList:GridRoomMapBuilder.kt$GridRoomMapBuilder$( private val lockedExit: Char = 'x', private val itemOrCharacterInRoom: Char = '?', private val verticalBoundary: Char = '|', private val horizontalBoundary: Char = '-', private val verticalExitBorder: Char = '|', private val horizontalExitBorder: Char = '-', private val corner: Char = '+', private val keyPadding: Int = 6 )</ID>
    <ID>LongParameterList:GridRoomMapBuilder.kt$GridRoomMapBuilder$( room: Room, viewPoint: ViewPoint, keyType: KeyType, gridStringBuilder: GridStringBuilder, startX: Int, startY: Int )</ID>
    <ID>LongParameterList:SceneFrameBuilder.kt$SceneFrameBuilder$( room: Room, viewPoint: ViewPoint, playableCharacter: PlayableCharacter, message: String, contextualCommands: List&lt;CommandHelp&gt;, keyType: KeyType )</ID>
    <ID>LoopWithTooManyJumpStatements:StringUtilities.kt$StringUtilities$while</ID>
    <ID>NestedBlockDepth:AnsiGridTextFrame.kt$AnsiGridTextFrame$override fun render(callback: RenderFrame)</ID>
    <ID>NestedBlockDepth:Game.kt$Game$internal fun execute()</ID>
    <ID>NestedBlockDepth:Region.kt$Region$public fun getPositionOfRoom(room: Room): RoomPosition?</ID>
    <ID>NestedBlockDepth:RegionMaker.kt$RegionMaker$public fun make(x: Int, y: Int, z: Int): Region</ID>
    <ID>NestedBlockDepth:RegionMaker.kt$RegionMaker.Companion$internal fun linkExits(region: Region)</ID>
    <ID>TooManyFunctions:AnsiGridStringBuilder.kt$AnsiGridStringBuilder</ID>
    <ID>TooManyFunctions:Game.kt$Game</ID>
    <ID>TooManyFunctions:HtmlPageBuilder.kt$HtmlPageBuilder</ID>
    <ID>TooManyFunctions:Region.kt$Region : ExaminableObject</ID>
    <ID>TooManyFunctions:Room.kt$Room : ExaminableObjectInteractionTarget</ID>
    <ID>TooManyFunctions:StringExtensions.kt$ktaf.extensions.StringExtensions.kt</ID>
  </CurrentIssues>
</SmellBaseline>
